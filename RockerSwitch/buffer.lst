GAS LISTING /var/tmp//ccPH0cbK.s 			page 1


   1               		.file	"buffer.c"
   2               		.arch atmega324p
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/Users/julian/Code/AVRExperiments/RockerSwitch/",100,0,2,.Ltext0
  11               		.stabs	"buffer.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  16               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  30               		.stabs	"buffer.h",130,0,0,0
  31               		.stabs	"struct_cBuffer:T(1,1)=s8dataptr:(1,2)=*(0,11),0,16;size:(0,9),16,16;datalength:(0,9),32,16
  32               		.stabs	"cBuffer:t(1,3)=(1,1)",128,0,47,0
  33               		.stabn	162,0,0,0
  34               		.stabs	"bufferInit:F(0,15)",36,0,25,bufferInit
  35               		.stabs	"buffer:P(0,16)=*(1,3)",64,0,24,30
  36               		.stabs	"start:P(1,2)",64,0,24,22
  37               		.stabs	"size:P(0,9)",64,0,24,20
  38               	.global	bufferInit
  39               		.type	bufferInit, @function
  40               	bufferInit:
  41               		.stabd	46,0,0
   1:buffer.c      **** /*! \file buffer.c \brief Multipurpose byte buffer structure and methods. */
   2:buffer.c      **** //*****************************************************************************
   3:buffer.c      **** //
   4:buffer.c      **** // File Name	: 'buffer.c'
   5:buffer.c      **** // Title		: Multipurpose byte buffer structure and methods
   6:buffer.c      **** // Author		: Pascal Stang - Copyright (C) 2001-2002
   7:buffer.c      **** // Created		: 9/23/2001
   8:buffer.c      **** // Revised		: 9/23/2001
   9:buffer.c      **** // Version		: 1.0
  10:buffer.c      **** // Target MCU	: any
  11:buffer.c      **** // Editor Tabs	: 4
  12:buffer.c      **** //
  13:buffer.c      **** // This code is distributed under the GNU Public License
  14:buffer.c      **** //		which can be found at http://www.gnu.org/licenses/gpl.txt
  15:buffer.c      **** //
  16:buffer.c      **** //*****************************************************************************
GAS LISTING /var/tmp//ccPH0cbK.s 			page 2


  17:buffer.c      **** 
  18:buffer.c      **** #include "buffer.h"
  19:buffer.c      **** 
  20:buffer.c      **** // global variables
  21:buffer.c      **** 
  22:buffer.c      **** // initialization
  23:buffer.c      **** 
  24:buffer.c      **** void bufferInit(cBuffer* buffer, unsigned char *start, unsigned short size)
  25:buffer.c      **** {
  42               		.stabn	68,0,25,.LM0-bufferInit
  43               	.LM0:
  44               	/* prologue: frame size=0 */
  45               	/* prologue end (size=0) */
  46 0000 FC01      		movw r30,r24
  26:buffer.c      **** 	// set start pointer of the buffer
  27:buffer.c      **** 	buffer->dataptr = start;
  47               		.stabn	68,0,27,.LM1-bufferInit
  48               	.LM1:
  49 0002 7183      		std Z+1,r23
  50 0004 6083      		st Z,r22
  28:buffer.c      **** 	buffer->size = size;
  51               		.stabn	68,0,28,.LM2-bufferInit
  52               	.LM2:
  53 0006 5383      		std Z+3,r21
  54 0008 4283      		std Z+2,r20
  29:buffer.c      **** 	// initialize index and length
  30:buffer.c      **** 	buffer->dataindex = 0;
  55               		.stabn	68,0,30,.LM3-bufferInit
  56               	.LM3:
  57 000a 1782      		std Z+7,__zero_reg__
  58 000c 1682      		std Z+6,__zero_reg__
  31:buffer.c      **** 	buffer->datalength = 0;
  59               		.stabn	68,0,31,.LM4-bufferInit
  60               	.LM4:
  61 000e 1582      		std Z+5,__zero_reg__
  62 0010 1482      		std Z+4,__zero_reg__
  63               	/* epilogue: frame size=0 */
  64 0012 0895      		ret
  65               	/* epilogue end (size=1) */
  66               	/* function bufferInit size 10 (9) */
  67               		.size	bufferInit, .-bufferInit
  68               	.Lscope0:
  69               		.stabs	"",36,0,0,.Lscope0-bufferInit
  70               		.stabd	78,0,0
  71               		.stabs	"bufferGetFromFront:F(0,11)",36,0,36,bufferGetFromFront
  72               		.stabs	"buffer:P(0,16)",64,0,35,28
  73               	.global	bufferGetFromFront
  74               		.type	bufferGetFromFront, @function
  75               	bufferGetFromFront:
  76               		.stabd	46,0,0
  32:buffer.c      **** }
  33:buffer.c      **** 
  34:buffer.c      **** // access routines
  35:buffer.c      **** unsigned char  bufferGetFromFront(cBuffer* buffer)
  36:buffer.c      **** {
  77               		.stabn	68,0,36,.LM5-bufferGetFromFront
  78               	.LM5:
GAS LISTING /var/tmp//ccPH0cbK.s 			page 3


  79               	/* prologue: frame size=0 */
  80 0014 CF93      		push r28
  81 0016 DF93      		push r29
  82               	/* prologue end (size=2) */
  83 0018 EC01      		movw r28,r24
  37:buffer.c      **** 	unsigned char data = 0;
  38:buffer.c      **** 	
  39:buffer.c      **** 	// check to see if there's data in the buffer
  40:buffer.c      **** 	if(buffer->datalength)
  84               		.stabn	68,0,40,.LM6-bufferGetFromFront
  85               	.LM6:
  86 001a 8C81      		ldd r24,Y+4
  87 001c 9D81      		ldd r25,Y+5
  88 001e 892B      		or r24,r25
  89 0020 01F4      		brne .L4
  90               		.stabn	68,0,40,.LM7-bufferGetFromFront
  91               	.LM7:
  92 0022 E0E0      		ldi r30,lo8(0)
  93 0024 00C0      		rjmp .L6
  94               	.L4:
  41:buffer.c      **** 	{
  42:buffer.c      **** 		// get the first character from buffer
  43:buffer.c      **** 		data = buffer->dataptr[buffer->dataindex];
  95               		.stabn	68,0,43,.LM8-bufferGetFromFront
  96               	.LM8:
  97 0026 8E81      		ldd r24,Y+6
  98 0028 9F81      		ldd r25,Y+7
  99 002a E881      		ld r30,Y
 100 002c F981      		ldd r31,Y+1
 101 002e E80F      		add r30,r24
 102 0030 F91F      		adc r31,r25
 103 0032 E081      		ld r30,Z
  44:buffer.c      **** 		// move index down and decrement length
  45:buffer.c      **** 		buffer->dataindex++;
 104               		.stabn	68,0,45,.LM9-bufferGetFromFront
 105               	.LM9:
 106 0034 0196      		adiw r24,1
 107 0036 9F83      		std Y+7,r25
 108 0038 8E83      		std Y+6,r24
  46:buffer.c      **** 		if(buffer->dataindex >= buffer->size)
 109               		.stabn	68,0,46,.LM10-bufferGetFromFront
 110               	.LM10:
 111 003a 6A81      		ldd r22,Y+2
 112 003c 7B81      		ldd r23,Y+3
 113 003e 8617      		cp r24,r22
 114 0040 9707      		cpc r25,r23
 115 0042 00F0      		brlo .L7
  47:buffer.c      **** 		{
  48:buffer.c      **** 			buffer->dataindex %= buffer->size;
 116               		.stabn	68,0,48,.LM11-bufferGetFromFront
 117               	.LM11:
 118 0044 0E94 0000 		call __udivmodhi4
 119 0048 9F83      		std Y+7,r25
 120 004a 8E83      		std Y+6,r24
 121               	.L7:
  49:buffer.c      **** 		}
  50:buffer.c      **** 		buffer->datalength--;
GAS LISTING /var/tmp//ccPH0cbK.s 			page 4


 122               		.stabn	68,0,50,.LM12-bufferGetFromFront
 123               	.LM12:
 124 004c 8C81      		ldd r24,Y+4
 125 004e 9D81      		ldd r25,Y+5
 126 0050 0197      		sbiw r24,1
 127 0052 9D83      		std Y+5,r25
 128 0054 8C83      		std Y+4,r24
 129               	.L6:
  51:buffer.c      **** 	}
  52:buffer.c      **** 	// return
  53:buffer.c      **** 	return data;
  54:buffer.c      **** }
 130               		.stabn	68,0,54,.LM13-bufferGetFromFront
 131               	.LM13:
 132 0056 8E2F      		mov r24,r30
 133 0058 9927      		clr r25
 134               	/* epilogue: frame size=0 */
 135 005a DF91      		pop r29
 136 005c CF91      		pop r28
 137 005e 0895      		ret
 138               	/* epilogue end (size=3) */
 139               	/* function bufferGetFromFront size 38 (33) */
 140               		.size	bufferGetFromFront, .-bufferGetFromFront
 141               		.stabs	"data:r(0,11)",64,0,37,30
 142               		.stabn	192,0,0,bufferGetFromFront-bufferGetFromFront
 143               		.stabn	224,0,0,.Lscope1-bufferGetFromFront
 144               	.Lscope1:
 145               		.stabs	"",36,0,0,.Lscope1-bufferGetFromFront
 146               		.stabd	78,0,0
 147               		.stabs	"bufferDumpFromFront:F(0,15)",36,0,57,bufferDumpFromFront
 148               		.stabs	"buffer:P(0,16)",64,0,56,30
 149               		.stabs	"numbytes:P(0,9)",64,0,56,18
 150               	.global	bufferDumpFromFront
 151               		.type	bufferDumpFromFront, @function
 152               	bufferDumpFromFront:
 153               		.stabd	46,0,0
  55:buffer.c      **** 
  56:buffer.c      **** void bufferDumpFromFront(cBuffer* buffer, unsigned short numbytes)
  57:buffer.c      **** {
 154               		.stabn	68,0,57,.LM14-bufferDumpFromFront
 155               	.LM14:
 156               	/* prologue: frame size=0 */
 157               	/* prologue end (size=0) */
 158 0060 FC01      		movw r30,r24
 159 0062 9B01      		movw r18,r22
  58:buffer.c      **** 	// dump numbytes from the front of the buffer
  59:buffer.c      **** 	// are we dumping less than the entire buffer?
  60:buffer.c      **** 	if(numbytes < buffer->datalength)
 160               		.stabn	68,0,60,.LM15-bufferDumpFromFront
 161               	.LM15:
 162 0064 8481      		ldd r24,Z+4
 163 0066 9581      		ldd r25,Z+5
 164 0068 6817      		cp r22,r24
 165 006a 7907      		cpc r23,r25
 166 006c 00F4      		brsh .L11
  61:buffer.c      **** 	{
  62:buffer.c      **** 		// move index down by numbytes and decrement length by numbytes
GAS LISTING /var/tmp//ccPH0cbK.s 			page 5


  63:buffer.c      **** 		buffer->dataindex += numbytes;
 167               		.stabn	68,0,63,.LM16-bufferDumpFromFront
 168               	.LM16:
 169 006e 8681      		ldd r24,Z+6
 170 0070 9781      		ldd r25,Z+7
 171 0072 860F      		add r24,r22
 172 0074 971F      		adc r25,r23
 173 0076 9783      		std Z+7,r25
 174 0078 8683      		std Z+6,r24
  64:buffer.c      **** 		if(buffer->dataindex >= buffer->size)
 175               		.stabn	68,0,64,.LM17-bufferDumpFromFront
 176               	.LM17:
 177 007a 6281      		ldd r22,Z+2
 178 007c 7381      		ldd r23,Z+3
 179 007e 8617      		cp r24,r22
 180 0080 9707      		cpc r25,r23
 181 0082 00F0      		brlo .L13
  65:buffer.c      **** 		{
  66:buffer.c      **** 			buffer->dataindex %= buffer->size;
 182               		.stabn	68,0,66,.LM18-bufferDumpFromFront
 183               	.LM18:
 184 0084 0E94 0000 		call __udivmodhi4
 185 0088 9783      		std Z+7,r25
 186 008a 8683      		std Z+6,r24
 187               	.L13:
  67:buffer.c      **** 		}
  68:buffer.c      **** 		buffer->datalength -= numbytes;
 188               		.stabn	68,0,68,.LM19-bufferDumpFromFront
 189               	.LM19:
 190 008c 8481      		ldd r24,Z+4
 191 008e 9581      		ldd r25,Z+5
 192 0090 821B      		sub r24,r18
 193 0092 930B      		sbc r25,r19
 194 0094 9583      		std Z+5,r25
 195 0096 8483      		std Z+4,r24
 196 0098 0895      		ret
 197               	.L11:
  69:buffer.c      **** 	}
  70:buffer.c      **** 	else
  71:buffer.c      **** 	{
  72:buffer.c      **** 		// flush the whole buffer
  73:buffer.c      **** 		buffer->datalength = 0;
 198               		.stabn	68,0,73,.LM20-bufferDumpFromFront
 199               	.LM20:
 200 009a 1582      		std Z+5,__zero_reg__
 201 009c 1482      		std Z+4,__zero_reg__
 202 009e 0895      		ret
 203               	/* epilogue: frame size=0 */
 204               	/* epilogue: noreturn */
 205               	/* epilogue end (size=0) */
 206               	/* function bufferDumpFromFront size 32 (32) */
 207               		.size	bufferDumpFromFront, .-bufferDumpFromFront
 208               	.Lscope2:
 209               		.stabs	"",36,0,0,.Lscope2-bufferDumpFromFront
 210               		.stabd	78,0,0
 211               		.stabs	"bufferGetAtIndex:F(0,11)",36,0,78,bufferGetAtIndex
 212               		.stabs	"buffer:P(0,16)",64,0,77,30
GAS LISTING /var/tmp//ccPH0cbK.s 			page 6


 213               		.stabs	"index:P(0,9)",64,0,77,24
 214               	.global	bufferGetAtIndex
 215               		.type	bufferGetAtIndex, @function
 216               	bufferGetAtIndex:
 217               		.stabd	46,0,0
  74:buffer.c      **** 	}
  75:buffer.c      **** }
  76:buffer.c      **** 
  77:buffer.c      **** unsigned char bufferGetAtIndex(cBuffer* buffer, unsigned short index)
  78:buffer.c      **** {
 218               		.stabn	68,0,78,.LM21-bufferGetAtIndex
 219               	.LM21:
 220               	/* prologue: frame size=0 */
 221               	/* prologue end (size=0) */
 222 00a0 FC01      		movw r30,r24
 223 00a2 CB01      		movw r24,r22
 224 00a4 2681      		ldd r18,Z+6
 225 00a6 3781      		ldd r19,Z+7
 226 00a8 6281      		ldd r22,Z+2
 227 00aa 7381      		ldd r23,Z+3
 228 00ac 820F      		add r24,r18
 229 00ae 931F      		adc r25,r19
 230 00b0 0E94 0000 		call __udivmodhi4
 231 00b4 0190      		ld __tmp_reg__,Z+
 232 00b6 F081      		ld r31,Z
 233 00b8 E02D      		mov r30,__tmp_reg__
 234 00ba E80F      		add r30,r24
 235 00bc F91F      		adc r31,r25
 236 00be 8081      		ld r24,Z
  79:buffer.c      **** 	// return character at index in buffer
  80:buffer.c      **** 	return buffer->dataptr[(buffer->dataindex+index)%(buffer->size)];
  81:buffer.c      **** }
 237               		.stabn	68,0,81,.LM22-bufferGetAtIndex
 238               	.LM22:
 239 00c0 9927      		clr r25
 240               	/* epilogue: frame size=0 */
 241 00c2 0895      		ret
 242               	/* epilogue end (size=1) */
 243               	/* function bufferGetAtIndex size 18 (17) */
 244               		.size	bufferGetAtIndex, .-bufferGetAtIndex
 245               	.Lscope3:
 246               		.stabs	"",36,0,0,.Lscope3-bufferGetAtIndex
 247               		.stabd	78,0,0
 248               		.stabs	"bufferAddToEnd:F(0,11)",36,0,84,bufferAddToEnd
 249               		.stabs	"buffer:P(0,16)",64,0,83,28
 250               		.stabs	"data:P(0,11)",64,0,83,20
 251               	.global	bufferAddToEnd
 252               		.type	bufferAddToEnd, @function
 253               	bufferAddToEnd:
 254               		.stabd	46,0,0
  82:buffer.c      **** 
  83:buffer.c      **** unsigned char bufferAddToEnd(cBuffer* buffer, unsigned char data)
  84:buffer.c      **** {
 255               		.stabn	68,0,84,.LM23-bufferAddToEnd
 256               	.LM23:
 257               	/* prologue: frame size=0 */
 258 00c4 CF93      		push r28
GAS LISTING /var/tmp//ccPH0cbK.s 			page 7


 259 00c6 DF93      		push r29
 260               	/* prologue end (size=2) */
 261 00c8 EC01      		movw r28,r24
 262 00ca 462F      		mov r20,r22
  85:buffer.c      **** 	// make sure the buffer has room
  86:buffer.c      **** 	if(buffer->datalength < buffer->size)
 263               		.stabn	68,0,86,.LM24-bufferAddToEnd
 264               	.LM24:
 265 00cc 2C81      		ldd r18,Y+4
 266 00ce 3D81      		ldd r19,Y+5
 267 00d0 6A81      		ldd r22,Y+2
 268 00d2 7B81      		ldd r23,Y+3
 269 00d4 2617      		cp r18,r22
 270 00d6 3707      		cpc r19,r23
 271 00d8 00F0      		brlo .L20
 272               		.stabn	68,0,86,.LM25-bufferAddToEnd
 273               	.LM25:
 274 00da 80E0      		ldi r24,lo8(0)
 275 00dc 90E0      		ldi r25,hi8(0)
 276 00de 00C0      		rjmp .L22
 277               	.L20:
  87:buffer.c      **** 	{
  88:buffer.c      **** 		// save data byte at end of buffer
  89:buffer.c      **** 		buffer->dataptr[(buffer->dataindex + buffer->datalength) % buffer->size] = data;
 278               		.stabn	68,0,89,.LM26-bufferAddToEnd
 279               	.LM26:
 280 00e0 8E81      		ldd r24,Y+6
 281 00e2 9F81      		ldd r25,Y+7
 282 00e4 820F      		add r24,r18
 283 00e6 931F      		adc r25,r19
 284 00e8 0E94 0000 		call __udivmodhi4
 285 00ec E881      		ld r30,Y
 286 00ee F981      		ldd r31,Y+1
 287 00f0 E80F      		add r30,r24
 288 00f2 F91F      		adc r31,r25
 289 00f4 4083      		st Z,r20
  90:buffer.c      **** 		// increment the length
  91:buffer.c      **** 		buffer->datalength++;
 290               		.stabn	68,0,91,.LM27-bufferAddToEnd
 291               	.LM27:
 292 00f6 8C81      		ldd r24,Y+4
 293 00f8 9D81      		ldd r25,Y+5
 294 00fa 0196      		adiw r24,1
 295 00fc 9D83      		std Y+5,r25
 296 00fe 8C83      		std Y+4,r24
 297 0100 8FEF      		ldi r24,lo8(255)
 298 0102 90E0      		ldi r25,hi8(255)
 299               	.L22:
 300               	/* epilogue: frame size=0 */
 301 0104 DF91      		pop r29
 302 0106 CF91      		pop r28
 303 0108 0895      		ret
 304               	/* epilogue end (size=3) */
 305               	/* function bufferAddToEnd size 35 (30) */
 306               		.size	bufferAddToEnd, .-bufferAddToEnd
 307               	.Lscope4:
 308               		.stabs	"",36,0,0,.Lscope4-bufferAddToEnd
GAS LISTING /var/tmp//ccPH0cbK.s 			page 8


 309               		.stabd	78,0,0
 310               		.stabs	"bufferIsNotFull:F(0,11)",36,0,99,bufferIsNotFull
 311               		.stabs	"buffer:P(0,16)",64,0,98,30
 312               	.global	bufferIsNotFull
 313               		.type	bufferIsNotFull, @function
 314               	bufferIsNotFull:
 315               		.stabd	46,0,0
  92:buffer.c      **** 		// return success
  93:buffer.c      **** 		return -1;
  94:buffer.c      **** 	}
  95:buffer.c      **** 	else return 0;
  96:buffer.c      **** }
  97:buffer.c      **** 
  98:buffer.c      **** unsigned char bufferIsNotFull(cBuffer* buffer)
  99:buffer.c      **** {
 316               		.stabn	68,0,99,.LM28-bufferIsNotFull
 317               	.LM28:
 318               	/* prologue: frame size=0 */
 319               	/* prologue end (size=0) */
 320 010a FC01      		movw r30,r24
 321 010c 40E0      		ldi r20,lo8(0)
 322 010e 50E0      		ldi r21,hi8(0)
 323 0110 2481      		ldd r18,Z+4
 324 0112 3581      		ldd r19,Z+5
 325 0114 8281      		ldd r24,Z+2
 326 0116 9381      		ldd r25,Z+3
 327 0118 2817      		cp r18,r24
 328 011a 3907      		cpc r19,r25
 329 011c 00F4      		brsh .L25
 330               		.stabn	68,0,99,.LM29-bufferIsNotFull
 331               	.LM29:
 332 011e 41E0      		ldi r20,lo8(1)
 333 0120 50E0      		ldi r21,hi8(1)
 334               	.L25:
 100:buffer.c      **** 	// check to see if the buffer has room
 101:buffer.c      **** 	// return true if there is room
 102:buffer.c      **** 	return (buffer->datalength < buffer->size);
 103:buffer.c      **** }
 335               		.stabn	68,0,103,.LM30-bufferIsNotFull
 336               	.LM30:
 337 0122 CA01      		movw r24,r20
 338               	/* epilogue: frame size=0 */
 339 0124 0895      		ret
 340               	/* epilogue end (size=1) */
 341               	/* function bufferIsNotFull size 14 (13) */
 342               		.size	bufferIsNotFull, .-bufferIsNotFull
 343               	.Lscope5:
 344               		.stabs	"",36,0,0,.Lscope5-bufferIsNotFull
 345               		.stabd	78,0,0
 346               		.stabs	"bufferFlush:F(0,15)",36,0,106,bufferFlush
 347               		.stabs	"buffer:P(0,16)",64,0,105,24
 348               	.global	bufferFlush
 349               		.type	bufferFlush, @function
 350               	bufferFlush:
 351               		.stabd	46,0,0
 104:buffer.c      **** 
 105:buffer.c      **** void bufferFlush(cBuffer* buffer)
GAS LISTING /var/tmp//ccPH0cbK.s 			page 9


 106:buffer.c      **** {
 352               		.stabn	68,0,106,.LM31-bufferFlush
 353               	.LM31:
 354               	/* prologue: frame size=0 */
 355               	/* prologue end (size=0) */
 107:buffer.c      **** 	// flush contents of the buffer
 108:buffer.c      **** 	buffer->datalength = 0;
 356               		.stabn	68,0,108,.LM32-bufferFlush
 357               	.LM32:
 358 0126 FC01      		movw r30,r24
 359 0128 1582      		std Z+5,__zero_reg__
 360 012a 1482      		std Z+4,__zero_reg__
 361               	/* epilogue: frame size=0 */
 362 012c 0895      		ret
 363               	/* epilogue end (size=1) */
 364               	/* function bufferFlush size 4 (3) */
 365               		.size	bufferFlush, .-bufferFlush
 366               	.Lscope6:
 367               		.stabs	"",36,0,0,.Lscope6-bufferFlush
 368               		.stabd	78,0,0
 369               		.stabs	"",100,0,0,.Letext0
 370               	.Letext0:
 371               	/* File "buffer.c": code  151 = 0x0097 ( 137), prologues   4, epilogues  10 */
GAS LISTING /var/tmp//ccPH0cbK.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 buffer.c
/var/tmp//ccPH0cbK.s:3      *ABS*:0000003f __SREG__
/var/tmp//ccPH0cbK.s:4      *ABS*:0000003e __SP_H__
/var/tmp//ccPH0cbK.s:5      *ABS*:0000003d __SP_L__
/var/tmp//ccPH0cbK.s:6      *ABS*:00000000 __tmp_reg__
/var/tmp//ccPH0cbK.s:7      *ABS*:00000001 __zero_reg__
/var/tmp//ccPH0cbK.s:40     .text:00000000 bufferInit
/var/tmp//ccPH0cbK.s:75     .text:00000014 bufferGetFromFront
/var/tmp//ccPH0cbK.s:152    .text:00000060 bufferDumpFromFront
/var/tmp//ccPH0cbK.s:216    .text:000000a0 bufferGetAtIndex
/var/tmp//ccPH0cbK.s:253    .text:000000c4 bufferAddToEnd
/var/tmp//ccPH0cbK.s:314    .text:0000010a bufferIsNotFull
/var/tmp//ccPH0cbK.s:350    .text:00000126 bufferFlush

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__udivmodhi4
